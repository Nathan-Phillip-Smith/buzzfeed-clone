{"ast":null,"code":"var _jsxFileName = \"/Users/nathansmith/Desktop/react-buzzfeed-clone/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport Title from './components/Title';\nimport QuestionsBlock from './components/QuestionsBlock';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [quiz, setQuiz] = useState(false);\n  const [chosenAnswerItems, setChosenAnswerItems] = useState([]);\n  const [unasnweredQuestionIds, setUnansweredQuestionIds] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/quiz');\n      const json = await response.json();\n      setQuiz(json);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  useEffect(() => {\n    quiz === null || quiz === void 0 ? void 0 : quiz.content.map(_ref => {\n      let {\n        id\n      } = _ref;\n      return id;\n    });\n  }, []);\n  console.log(chosenAnswerItems);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Title, {\n      title: quiz === null || quiz === void 0 ? void 0 : quiz.title,\n      subtitle: quiz === null || quiz === void 0 ? void 0 : quiz.subtitle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), quiz && (quiz === null || quiz === void 0 ? void 0 : quiz.content.map(contentItem => /*#__PURE__*/_jsxDEV(QuestionsBlock, {\n      quizItem: contentItem,\n      setChosenAnswerItems: setChosenAnswerItems,\n      chosenAnswerItems: chosenAnswerItems,\n      setUnansweredQuestionIds: setUnansweredQuestionIds,\n      unasnweredQuestionIds: unasnweredQuestionIds\n    }, contentItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }, this)))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"xVJrVacqJqgxBQO1O8FG0BVdwe0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Title","QuestionsBlock","jsxDEV","_jsxDEV","App","_s","quiz","setQuiz","chosenAnswerItems","setChosenAnswerItems","unasnweredQuestionIds","setUnansweredQuestionIds","fetchData","response","fetch","json","err","console","log","content","map","_ref","id","className","children","title","subtitle","fileName","_jsxFileName","lineNumber","columnNumber","contentItem","quizItem","_c","$RefreshReg$"],"sources":["/Users/nathansmith/Desktop/react-buzzfeed-clone/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport Title from './components/Title'\nimport QuestionsBlock from './components/QuestionsBlock'\n\nconst App = () => {\n    const [quiz, setQuiz] = useState(false)\n    const [chosenAnswerItems, setChosenAnswerItems] = useState([])\n    const [unasnweredQuestionIds, setUnansweredQuestionIds] = useState([])\n\n\n    const fetchData = async () => {\n      try {\n        const response = await fetch('http://localhost:8000/quiz');\n        const json = await response.json()\n        setQuiz(json)\n      } catch (err) {\n        console.log(err)\n      }\n    }\n\n    useEffect(() => {\n      fetchData() \n    }, [])\n\n    useEffect(() => {\n      quiz?.content.map(({ id }) => id)\n    }, [])\n\n    console.log(chosenAnswerItems)\n\n  return (\n    <div  className=\"app\">\n      <Title title={quiz?.title} subtitle={quiz?.subtitle}/>\n        {quiz && quiz?.content.map(contentItem => (\n          <QuestionsBlock \n            key={contentItem.id}\n            quizItem={contentItem} \n            setChosenAnswerItems={setChosenAnswerItems}\n            chosenAnswerItems={chosenAnswerItems}\n            setUnansweredQuestionIds={setUnansweredQuestionIds}\n            unasnweredQuestionIds={unasnweredQuestionIds}\n          />\n        ))}\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,cAAc,MAAM,6BAA6B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACvC,MAAM,CAACU,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAM,CAACY,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAGtE,MAAMc,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,4BAA4B,CAAC;MAC1D,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;MAClCR,OAAO,CAACQ,IAAI,CAAC;IACf,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IAClB;EACF,CAAC;EAEDjB,SAAS,CAAC,MAAM;IACda,SAAS,EAAE;EACb,CAAC,EAAE,EAAE,CAAC;EAENb,SAAS,CAAC,MAAM;IACdO,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,OAAO,CAACC,GAAG,CAACC,IAAA;MAAA,IAAC;QAAEC;MAAG,CAAC,GAAAD,IAAA;MAAA,OAAKC,EAAE;IAAA,EAAC;EACnC,CAAC,EAAE,EAAE,CAAC;EAENL,OAAO,CAACC,GAAG,CAACV,iBAAiB,CAAC;EAEhC,oBACEL,OAAA;IAAMoB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBACnBrB,OAAA,CAACH,KAAK;MAACyB,KAAK,EAAEnB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEmB,KAAM;MAACC,QAAQ,EAAEpB,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,EACnDxB,IAAI,KAAIA,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEa,OAAO,CAACC,GAAG,CAACW,WAAW,iBACpC5B,OAAA,CAACF,cAAc;MAEb+B,QAAQ,EAAED,WAAY;MACtBtB,oBAAoB,EAAEA,oBAAqB;MAC3CD,iBAAiB,EAAEA,iBAAkB;MACrCG,wBAAwB,EAAEA,wBAAyB;MACnDD,qBAAqB,EAAEA;IAAsB,GALxCqB,WAAW,CAACT,EAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAOtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEA;AAEV,CAAC;AAAAzB,EAAA,CA1CKD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AA4CT,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}